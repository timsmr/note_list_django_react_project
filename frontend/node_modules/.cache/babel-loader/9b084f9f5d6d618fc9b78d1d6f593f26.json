{"ast":null,"code":"import _objectSpread from\"C:/Users/timur/OneDrive/Desktop/super mega projects/mynotes/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/timur/OneDrive/Desktop/super mega projects/mynotes/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/timur/OneDrive/Desktop/super mega projects/mynotes/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\timur\\\\OneDrive\\\\Desktop\\\\super mega projects\\\\mynotes\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{ReactComponent as ArrowLeft}from\"../assets/arrow-left.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NotePage=function NotePage(){var _useParams=useParams(),id=_useParams.id;var navigate=useNavigate();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];useEffect(function(){getNote();},[id]);var getNote=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(id==='new')){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return fetch(\"/api/notes/\".concat(id,\"/\"));case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;setNote(data);case 9:case\"end\":return _context.stop();}}},_callee);}));return function getNote(){return _ref.apply(this,arguments);};}();var createNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:fetch(\"/api/notes/\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(note)});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function createNote(){return _ref2.apply(this,arguments);};}();var updateNote=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:fetch(\"/api/notes/\".concat(id,\"/\"),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(note)});case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function updateNote(){return _ref3.apply(this,arguments);};}();var deleteNote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:fetch(\"/api/notes/\".concat(id,\"/\"),{method:'DELETE',headers:{'Content-Type':'application/json'}});navigate('/');case 2:case\"end\":return _context4.stop();}}},_callee4);}));return function deleteNote(){return _ref4.apply(this,arguments);};}();var handleSubmit=function handleSubmit(){if(id!=='new'&&note.body==''){deleteNote();}else if(id!=='new'){updateNote();}else if(id==='new'&&note.body!==''){createNote();}navigate('/');};var handleChange=function handleChange(value){setNote(function(note){return _objectSpread(_objectSpread({},note),{},{'body':value});});};return/*#__PURE__*/_jsxs(\"div\",{className:\"note\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"note-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(ArrowLeft,{onClick:handleSubmit})}),id!=='new'?/*#__PURE__*/_jsx(\"button\",{onClick:deleteNote,children:\"Delete\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Done\"})]}),/*#__PURE__*/_jsx(\"textarea\",{onChange:function onChange(e){handleChange(e.target.value);},value:note===null||note===void 0?void 0:note.body})]});};export default NotePage;","map":{"version":3,"sources":["C:/Users/timur/OneDrive/Desktop/super mega projects/mynotes/frontend/src/pages/NotePage.js"],"names":["React","useState","useEffect","useParams","useNavigate","ReactComponent","ArrowLeft","NotePage","id","navigate","note","setNote","getNote","fetch","response","json","data","createNote","method","headers","body","JSON","stringify","updateNote","deleteNote","handleSubmit","handleChange","value","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\r\n\r\nconst NotePage = () => {\r\n\r\n  let { id } = useParams();\r\n  let navigate = useNavigate();\r\n  let [note, setNote] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getNote()\r\n  }, [id])\r\n  \r\n  let getNote = async () => {\r\n    if (id === 'new' ) return\r\n\r\n    let response = await fetch(`/api/notes/${id}/`);\r\n    let data = await response.json()\r\n    setNote(data)\r\n  }\r\n\r\n  let createNote = async () => {\r\n    fetch(`/api/notes/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(note)\r\n    })\r\n  }\r\n\r\n  let updateNote = async () => {\r\n    fetch(`/api/notes/${id}/`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(note)\r\n    });\r\n  }\r\n\r\n  let deleteNote = async () => {\r\n    fetch(`/api/notes/${id}/`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    navigate('/');\r\n  }\r\n\r\n  let handleSubmit = () => {\r\n    if (id !== 'new' && note.body == '') {\r\n      deleteNote()\r\n    } else if (id !== 'new') {\r\n      updateNote()\r\n    } else if (id === 'new' && note.body !== '') {\r\n      createNote()\r\n    }\r\n    navigate('/');\r\n  }\r\n\r\n  let handleChange = (value) => {\r\n    setNote(note => ({...note, 'body': value}))\r\n  }\r\n\r\n  return (\r\n    <div className='note'>\r\n      <div className='note-header'>\r\n        <h3>\r\n            <ArrowLeft onClick={handleSubmit} />\r\n        </h3>\r\n        {id !== 'new' ? (\r\n          <button onClick={deleteNote}>Delete</button>\r\n        ) : (\r\n          <button onClick={handleSubmit}>Done</button>\r\n        )}\r\n      </div>\r\n      <textarea onChange={(e) => { handleChange(e.target.value) }} value={note?.body}></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage"]},"metadata":{},"sourceType":"module"}