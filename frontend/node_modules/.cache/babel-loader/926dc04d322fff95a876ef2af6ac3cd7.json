{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\timur\\\\OneDrive\\\\Desktop\\\\frontend\\\\src\\\\pages\\\\NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [id]);\n\n  let getNote = async () => {\n    if (id === 'new') return;\n    let response = await fetch(`/api/notes/${id}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n\n  let createNote = async () => {\n    fetch(`/api/notes/create/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n\n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n\n  let deleteNote = async () => {\n    fetch(`/api/notes/${id}/delete/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate('/');\n  };\n\n  let handleSubmit = () => {\n    if (id !== 'new' && note.body == '') {\n      deleteNote();\n    } else if (id !== 'new') {\n      updateNote();\n    } else if (id === 'new' && note.body !== '') {\n      createNote();\n    }\n\n    navigate('/');\n  };\n\n  let handleChange = value => {\n    setNote(note => ({ ...note,\n      value\n    }));\n    console.log('Handle Change: ', note);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        handleChange(e.target.value);\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotePage, \"XmcDcyuwDQXK1BemclxzpcMxeCo=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"sources":["C:/Users/timur/OneDrive/Desktop/frontend/src/pages/NotePage.js"],"names":["React","useState","useEffect","useParams","useNavigate","ReactComponent","ArrowLeft","NotePage","id","navigate","note","setNote","getNote","response","fetch","data","json","createNote","method","headers","body","JSON","stringify","updateNote","deleteNote","handleSubmit","handleChange","value","console","log","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\r\n\r\nconst NotePage = () => {\r\n\r\n  let { id } = useParams();\r\n  let navigate = useNavigate();\r\n  let [note, setNote] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getNote()\r\n  }, [id])\r\n  \r\n  let getNote = async () => {\r\n    if (id === 'new' ) return\r\n\r\n    let response = await fetch(`/api/notes/${id}/`);\r\n    let data = await response.json()\r\n    setNote(data)\r\n  }\r\n\r\n  let createNote = async () => {\r\n    fetch(`/api/notes/create/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(note)\r\n    })\r\n  }\r\n\r\n  let updateNote = async () => {\r\n    fetch(`/api/notes/${id}/update/`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(note)\r\n    });\r\n  }\r\n\r\n  let deleteNote = async () => {\r\n    fetch(`/api/notes/${id}/delete/`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    navigate('/');\r\n  }\r\n\r\n  let handleSubmit = () => {\r\n    if (id !== 'new' && note.body == '') {\r\n      deleteNote()\r\n    } else if (id !== 'new') {\r\n      updateNote()\r\n    } else if (id === 'new' && note.body !== '') {\r\n      createNote()\r\n    }\r\n    navigate('/');\r\n  }\r\n\r\n  let handleChange = (value) => {\r\n    setNote(note => ({...note, value}))\r\n    console.log('Handle Change: ', note)\r\n  }\r\n\r\n  return (\r\n    <div className='note'>\r\n      <div className='note-header'>\r\n        <h3>\r\n            <ArrowLeft onClick={handleSubmit} />\r\n        </h3>\r\n        {id !== 'new' ? (\r\n          <button onClick={deleteNote}>Delete</button>\r\n        ) : (\r\n          <button onClick={handleSubmit}>Done</button>\r\n        )}\r\n      </div>\r\n      <textarea onChange={(e) => { handleChange(e.target.value) }} defaultValue={note?.body}></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage"]},"metadata":{},"sourceType":"module"}