[{"C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\index.js":"1","C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\App.js":"2","C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\components\\Header.js":"3","C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\pages\\NotePage.js":"4","C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\pages\\NotesListPage.js":"5","C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\components\\AddButton.js":"6","C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\components\\ListItem.js":"7"},{"size":197,"mtime":1647977825511,"results":"8","hashOfConfig":"9"},{"size":596,"mtime":1648051907803,"results":"10","hashOfConfig":"9"},{"size":170,"mtime":1647982416369,"results":"11","hashOfConfig":"9"},{"size":1994,"mtime":1648055269639,"results":"12","hashOfConfig":"9"},{"size":856,"mtime":1648023531010,"results":"13","hashOfConfig":"9"},{"size":296,"mtime":1648023479427,"results":"14","hashOfConfig":"9"},{"size":869,"mtime":1648050872863,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"h1jafm",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\index.js",[],[],["39","40"],"C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\App.js",[],[],"C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\components\\Header.js",[],[],"C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\pages\\NotePage.js",["41","42"],[],"import React, { useState, useEffect } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\r\n\r\nconst NotePage = () => {\r\n\r\n  let { id } = useParams();\r\n  let navigate = useNavigate();\r\n  let [note, setNote] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getNote()\r\n  }, [id])\r\n  \r\n  let getNote = async () => {\r\n    if (id === 'new' ) return\r\n\r\n    let response = await fetch(`/api/notes/${id}/`);\r\n    let data = await response.json()\r\n    setNote(data)\r\n  }\r\n\r\n  let createNote = async () => {\r\n    fetch(`/api/notes/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(note)\r\n    })\r\n  }\r\n\r\n  let updateNote = async () => {\r\n    fetch(`/api/notes/${id}/`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(note)\r\n    });\r\n  }\r\n\r\n  let deleteNote = async () => {\r\n    fetch(`/api/notes/${id}/`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    navigate('/');\r\n  }\r\n\r\n  let handleSubmit = () => {\r\n    if (id !== 'new' && note.body == '') {\r\n      deleteNote()\r\n    } else if (id !== 'new') {\r\n      updateNote()\r\n    } else if (id === 'new' && note.body !== '') {\r\n      createNote()\r\n    }\r\n    navigate('/');\r\n  }\r\n\r\n  let handleChange = (value) => {\r\n    setNote(note => ({...note, 'body': value}))\r\n  }\r\n\r\n  return (\r\n    <div className='note'>\r\n      <div className='note-header'>\r\n        <h3>\r\n            <ArrowLeft onClick={handleSubmit} />\r\n        </h3>\r\n        {id !== 'new' ? (\r\n          <button onClick={deleteNote}>Delete</button>\r\n        ) : (\r\n          <button onClick={handleSubmit}>Done</button>\r\n        )}\r\n      </div>\r\n      <textarea onChange={(e) => { handleChange(e.target.value) }} value={note?.body}></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage","C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\pages\\NotesListPage.js",[],[],"C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\components\\AddButton.js",[],[],"C:\\Users\\timur\\OneDrive\\Desktop\\super mega projects\\mynotes\\frontend\\src\\components\\ListItem.js",[],[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":13,"column":6,"nodeType":"49","endLine":13,"endColumn":10,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":54,"column":35,"nodeType":"53","messageId":"54","endLine":54,"endColumn":37},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [getNote, id]",{"range":"60","text":"61"},[361,365],"[getNote, id]"]